// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("API.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Truck")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("driver");
                });

            modelBuilder.Entity("API.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Deliverylocation")
                        .HasColumnType("longtext");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("ExitLocation")
                        .HasColumnType("longtext");

                    b.Property<string>("Km")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TripDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("trip");
                });

            modelBuilder.Entity("API.Models.Trip", b =>
                {
                    b.HasOne("API.Models.Driver", null)
                        .WithMany("Trip")
                        .HasForeignKey("DriverId");
                });

            modelBuilder.Entity("API.Models.Driver", b =>
                {
                    b.Navigation("Trip");
                });
#pragma warning restore 612, 618
        }
    }
}
